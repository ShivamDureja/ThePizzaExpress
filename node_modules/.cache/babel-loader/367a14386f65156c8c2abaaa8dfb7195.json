{"ast":null,"code":"var _jsxFileName = \"D:\\\\ThePizzaExpress\\\\src\\\\Components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport CartContext from \"../../Store/cart-context\";\nimport classes from \"../Cart/Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const CartRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const CartAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const OrderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = userData => {\n    fetch('https://thepizzaexpress-e954e-default-rtdb.firebaseio.com/order.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n  };\n\n  const CartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: CartRemoveHandler.bind(null, item.id),\n      onAdd: CartAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: OrderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 30\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [CartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"krKM0MkQXaEe66/NYoUTmFbnGvw=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/ThePizzaExpress/src/Components/Cart/Cart.js"],"names":["useContext","useState","CartContext","classes","Modal","CartItem","Checkout","Cart","props","cartCtx","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","totalAmount","toFixed","hasItems","items","length","CartRemoveHandler","id","removeItem","CartAddHandler","item","addItem","amount","OrderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","CartItems","map","name","price","bind","modalActions","actions","onClose","button","total"],"mappings":";;;AAAA,SAASA,UAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,OAAO,GAAGT,UAAU,CAACE,WAAD,CAA1B;AACA,QAAM,CAACQ,UAAD,EAAYC,aAAZ,IAA6BV,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM,CAACW,YAAD,EAAcC,eAAd,IAAiCZ,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAMa,WAAW,GAAI,IAAGL,OAAO,CAACK,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGP,OAAO,CAACQ,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AACA,QAAMC,iBAAiB,GAAGC,EAAE,IAAG;AAC7BX,IAAAA,OAAO,CAACY,UAAR,CAAmBD,EAAnB;AACD,GAFD;;AAGA,QAAME,cAAc,GAAGC,IAAI,IAAG;AAC5Bd,IAAAA,OAAO,CAACe,OAAR,CAAgB,EAAC,GAAGD,IAAJ;AAASE,MAAAA,MAAM,EAAC;AAAhB,KAAhB;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACzBf,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,QAAMgB,kBAAkB,GAAIC,QAAD,IAAc;AACvCC,IAAAA,KAAK,CAAC,sEAAD,EAAwE;AAC3EC,MAAAA,MAAM,EAAC,MADoE;AAE3EC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAClBC,QAAAA,IAAI,EAACN,QADa;AAElBO,QAAAA,YAAY,EAAE1B,OAAO,CAACQ;AAFJ,OAAf;AAFsE,KAAxE,CAAL;AAOD,GARD;;AAUA,QAAMmB,SAAS,gBACb;AAAI,IAAA,SAAS,EAAEjC,OAAO,CAAC,YAAD,CAAtB;AAAA,cACGM,OAAO,CAACQ,KAAR,CAAcoB,GAAd,CAAmBd,IAAD,iBACjB,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACe,IAFb;AAGE,MAAA,MAAM,EAAEf,IAAI,CAACE,MAHf;AAIE,MAAA,KAAK,EAAEF,IAAI,CAACgB,KAJd;AAKE,MAAA,QAAQ,EAAEpB,iBAAiB,CAACqB,IAAlB,CAAuB,IAAvB,EAA4BjB,IAAI,CAACH,EAAjC,CALZ;AAME,MAAA,KAAK,EAAIE,cAAc,CAACkB,IAAf,CAAoB,IAApB,EAAyBjB,IAAzB;AANX,OACOA,IAAI,CAACH,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAcM,QAAMqB,YAAY,gBAAG;AAAK,IAAA,SAAS,EAAEtC,OAAO,CAACuC,OAAxB;AAAA,4BACrB;AAAQ,MAAA,SAAS,EAAEvC,OAAO,CAAC,aAAD,CAA1B;AAA2C,MAAA,OAAO,EAAEK,KAAK,CAACmC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADqB,EAIpB3B,QAAQ,iBAAI;AAAQ,MAAA,SAAS,EAAEb,OAAO,CAACyC,MAA3B;AAAmC,MAAA,OAAO,EAAElB,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJQ;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AAMN,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAElB,KAAK,CAACmC,OAAtB;AAAA,eACGP,SADH,eAEE;AAAK,MAAA,SAAS,EAAEjC,OAAO,CAAC0C,KAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAO/B;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAMGJ,UAAU,iBAAI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEiB,kBAArB;AAAyC,MAAA,QAAQ,EAAInB,KAAK,CAACmC;AAA3D;AAAA;AAAA;AAAA;AAAA,YANjB,EAOG,CAACjC,UAAD,IAAe+B,YAPlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1DD;;GAAMlC,I;;KAAAA,I;AA4DN,eAAeA,IAAf","sourcesContent":["import { useContext,useState } from \"react\";\r\nimport CartContext from \"../../Store/cart-context\";\r\nimport classes from \"../Cart/Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const [isCheckout,setIsCheckout] = useState(false);\r\n  const [isSubmitting,setIsSubmitting] = useState(false)\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n  const CartRemoveHandler = id =>{\r\n    cartCtx.removeItem(id);\r\n  };\r\n  const CartAddHandler = item =>{\r\n    cartCtx.addItem({...item,amount:1});\r\n  };\r\n  const OrderHandler = () => {\r\n    setIsCheckout(true);\r\n  }\r\n\r\n  const submitOrderHandler = (userData) => {\r\n    fetch('https://thepizzaexpress-e954e-default-rtdb.firebaseio.com/order.json',{\r\n      method:'POST',\r\n      body:JSON.stringify({\r\n        user:userData,\r\n        orderedItems: cartCtx.items\r\n      })\r\n    });\r\n  };\r\n\r\n  const CartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={CartRemoveHandler.bind(null,item.id)}\r\n          onAdd = {CartAddHandler.bind(null,item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n        const modalActions = <div className={classes.actions}>\r\n        <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n        {hasItems && <button className={classes.button} onClick={OrderHandler}>Order</button>}\r\n      </div>\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {CartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel = {props.onClose}/>}\r\n      {!isCheckout && modalActions}\r\n      \r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}