{"ast":null,"code":"var _jsxFileName = \"D:\\\\ThePizzaExpress\\\\src\\\\Components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [FormInputValid, setFormInputValid] = useState({\n    name: true,\n    address: true,\n    postalCode: true,\n    city: true\n  });\n  const nameRef = useRef();\n  const addressRef = useRef();\n  const postalCodeRef = useRef();\n  const cityRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameRef.current.value;\n    const enteredAddress = addressRef.current.value;\n    const enteredPostalCode = postalCodeRef.current.value;\n    const enteredCity = cityRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredAddressIsValid = !isEmpty(enteredAddress);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = !isFiveChars(enteredPostalCode);\n    setFormInputValid({\n      name: enteredNameIsValid,\n      address: enteredAddressIsValid,\n      postalCode: enteredPostalCodeIsValid,\n      city: enteredCityIsValid\n    });\n    const FormIsValid = enteredNameIsValid && enteredAddressIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!FormIsValid) {\n      return;\n    }\n  };\n\n  const nameClassController = `${classes.control} ${FormInputValid.name ? \"\" : classes.invalid}`;\n  const addressClassController = `${classes.control} ${FormInputValid.address ? \"\" : classes.invalid}`;\n  const postalClassController = `${classes.control} ${FormInputValid.postalCode ? \"\" : classes.invalid}`;\n  const cityClassController = `${classes.control} ${FormInputValid.city ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameClassController,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !FormInputValid.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addressClassController,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        ref: addressRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !FormInputValid.address && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid address!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), !FormInputValid.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid postalCode!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), !FormInputValid.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"iMQgHTTXqMpiqVWHDghDri9mkpY=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["D:/ThePizzaExpress/src/Components/Cart/Checkout.js"],"names":["classes","useRef","useState","isEmpty","value","trim","isFiveChars","length","Checkout","props","FormInputValid","setFormInputValid","name","address","postalCode","city","nameRef","addressRef","postalCodeRef","cityRef","confirmHandler","event","preventDefault","enteredName","current","enteredAddress","enteredPostalCode","enteredCity","enteredNameIsValid","enteredAddressIsValid","enteredCityIsValid","enteredPostalCodeIsValid","FormIsValid","nameClassController","control","invalid","addressClassController","postalClassController","cityClassController","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import classes from \"./Checkout.module.css\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n  const [FormInputValid, setFormInputValid] = useState({\r\n    name: true,\r\n    address: true,\r\n    postalCode: true,\r\n    city: true,\r\n  });\r\n\r\n  const nameRef = useRef();\r\n  const addressRef = useRef();\r\n  const postalCodeRef = useRef();\r\n  const cityRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName = nameRef.current.value;\r\n    const enteredAddress = addressRef.current.value;\r\n    const enteredPostalCode = postalCodeRef.current.value;\r\n    const enteredCity = cityRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredAddressIsValid = !isEmpty(enteredAddress);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = !isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputValid({\r\n      name: enteredNameIsValid,\r\n      address: enteredAddressIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n      city: enteredCityIsValid,\r\n    });\r\n\r\n    const FormIsValid =\r\n      enteredNameIsValid &&\r\n      enteredAddressIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    if (!FormIsValid) {\r\n      return;\r\n    }\r\n  };\r\n  const nameClassController = `${classes.control} ${\r\n    FormInputValid.name ? \"\" : classes.invalid\r\n  }`;\r\n  const addressClassController = `${classes.control} ${\r\n    FormInputValid.address ? \"\" : classes.invalid\r\n  }`;\r\n  const postalClassController = `${classes.control} ${\r\n    FormInputValid.postalCode ? \"\" : classes.invalid\r\n  }`;\r\n  const cityClassController = `${classes.control} ${\r\n    FormInputValid.city ? \"\" : classes.invalid\r\n  }`;\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameClassController}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameRef} />\r\n        {!FormInputValid.name && <p>Please enter valid name!</p>}\r\n      </div>\r\n      <div className={addressClassController}>\r\n        <label htmlFor=\"address\">Address</label>\r\n        <input type=\"text\" id=\"address\" ref={addressRef} />\r\n        {!FormInputValid.address && <p>Please enter valid address!</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeRef} />\r\n        {!FormInputValid.postalCode && <p>Please enter valid postalCode!</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityRef} />\r\n        {!FormInputValid.city && <p>Please enter valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}